{
  "openapi": "3.0.0",
  "info": {
    "title": "Node-Typescript API",
    "version": "1.0.0",
    "description": "A sample API"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "apis": [
    "/Users/j6/Desktop/betterspace-backend/betterspace/src/**/**/*.ts"
  ],
  "paths": {
    "/auth/signup/": {
      "post": {
        "description": "sign up user to application",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "description": "sign up body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchema"
              },
              "example": {
                "_id": "0123456789",
                "firstname": "John",
                "lastname": "Wick",
                "email": "test.user@mail.com",
                "password": "test_test"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user successfuly signed in",
            "content": {
              "appication/json": {
                "example": {
                  "status": 200,
                  "logged": true,
                  "message": "Sign in successfull!!"
                }
              }
            }
          },
          "400": {
            "description": "sign in failed",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "logged": false,
                  "message": "Email already exists"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login/": {
      "post": {
        "description": "Login user to application",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "description": "login body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchema"
              },
              "example": {
                "_id": "0123456789",
                "firstname": "John",
                "lastname": "Wick",
                "email": "test.user@mail.com",
                "password": "test_test"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user successfuly logged",
            "content": {
              "appication/json": {
                "example": {
                  "status": 200,
                  "logged": true,
                  "message": "Successfully logged!"
                }
              }
            }
          },
          "401": {
            "description": "Not logged, invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "logged": false,
                  "message": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout/": {
      "post": {
        "description": "Loogout from application",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "users successfuly logout",
            "content": {
              "application/json": {
                "example": {
                  "status": 200,
                  "logged": false,
                  "message": "Successfuly logged out"
                }
              }
            }
          },
          "401": {
            "description": "cant logout user, because he didnt login to app",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "logged": false,
                  "message": "You are not authorized to app. Can't logout"
                }
              }
            }
          }
        }
      }
    },
    "/v1/student/{id}": {
      "get": {
        "description": "Get student by student_id, list courses student is currently enrolled in.",
        "tags": [
          "students"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique _id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return user by _id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete student by _id",
        "tags": [
          "users"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique _id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return deleted student",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserSchema": {
        "required": [
          "_id",
          "firstname",
          "lastname",
          "email"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "passwordResetToken": {
            "type": "string"
          },
          "passwordResetExpires": {
            "type": "string",
            "format": "date"
          },
          "tokens": {
            "type": "array"
          },
          "courses": {
            "type": "array"
          }
        }
      },
      "CourseSchema": {
        "required": [
          "_id",
          "title",
          "description",
          "professor"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "professor": {
            "type": "string"
          },
          "assignemnts": {
            "type": "array"
          },
          "students": {
            "type": "array"
          }
        }
      },
      "GradeSchema" : {
        "required": [
          "student_id",
          "assignment_id",
          "grade"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "student_id": {
            "type": "string"
          },
          "assignemnt_id": {
            "type": "string"
          },
          "grade": {
            "type": "number"
          }
        }
      },
      "AssignmentSchema": {
        "required": [

        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "due_date": {
            "type": "date"
          }
        }
      },
      "ErrorSchema": {
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP status code",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "Error description",
            "example": "User created"
          }
        }
      }
    },
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sid"
      }
    }
  },
  "tags": []
}